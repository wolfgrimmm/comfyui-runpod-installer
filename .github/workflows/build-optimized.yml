name: Optimized Docker Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build base image only when dependencies change
  build-base:
    runs-on: ubuntu-latest
    outputs:
      needs-rebuild: ${{ steps.check.outputs.needs-rebuild }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Check if base needs rebuild
        id: check
        run: |
          # Check if Dockerfile.base or requirements changed
          if git diff HEAD~1 HEAD --name-only | grep -E "(Dockerfile\.base|requirements\.txt)"; then
            echo "needs-rebuild=true" >> $GITHUB_OUTPUT
          else
            echo "needs-rebuild=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Set up Docker Buildx
        if: steps.check.outputs.needs-rebuild == 'true'
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        if: steps.check.outputs.needs-rebuild == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push base image
        if: steps.check.outputs.needs-rebuild == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.base
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
          cache-from: type=gha,scope=base
          cache-to: type=gha,scope=base,mode=max
          platforms: linux/amd64

  # Main build - uses cached base
  build-main:
    runs-on: ubuntu-latest
    needs: [build-base]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
          
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push main image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.optimized
          push: true
          tags: |
            ${{ vars.DOCKER_USER }}/comfyui-runpod:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
          cache-from: |
            type=gha,scope=main
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cache-to: |
            type=gha,scope=main,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache,mode=max
          platforms: linux/amd64