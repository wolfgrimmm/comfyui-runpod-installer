name: Docker Build and Push

on:
  # Disabled auto-build on push - build locally instead (faster: 30min vs 3hrs)
  # To manually trigger a build, go to Actions tab and click "Run workflow"
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'Dockerfile'
  #     - 'scripts/**'
  #     - 'ui/**'
  #     - 'config/**'
  #     - '.github/workflows/build.yml'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild without cache'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  IMAGE_NAME: wolfgrimmm/comfyui-runpod

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      dockerfile: ${{ steps.changes.outputs.dockerfile }}
      scripts: ${{ steps.changes.outputs.scripts }}
      ui: ${{ steps.changes.outputs.ui }}
      config: ${{ steps.changes.outputs.config }}
      should_build: ${{ steps.decision.outputs.should_build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check what changed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dockerfile:
              - 'Dockerfile'
            scripts:
              - 'scripts/**'
            ui:
              - 'ui/**'
            config:
              - 'config/**'

      - name: Decide if should build
        id: decision
        run: |
          if [[ "${{ github.event.inputs.force_rebuild }}" == "true" ]] || \
             [[ "${{ steps.changes.outputs.dockerfile }}" == "true" ]] || \
             [[ "${{ steps.changes.outputs.scripts }}" == "true" ]] || \
             [[ "${{ steps.changes.outputs.ui }}" == "true" ]] || \
             [[ "${{ steps.changes.outputs.config }}" == "true" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Generate cache keys
        id: cache_keys
        run: |
          echo "dockerfile_hash=${{ hashFiles('Dockerfile') }}" >> $GITHUB_OUTPUT
          echo "scripts_hash=${{ hashFiles('scripts/**') }}" >> $GITHUB_OUTPUT
          echo "ui_hash=${{ hashFiles('ui/**') }}" >> $GITHUB_OUTPUT
          echo "config_hash=${{ hashFiles('config/**') }}" >> $GITHUB_OUTPUT
          
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Generate build summary
        if: always()
        run: |
          echo "## 🐳 Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Changed Components" >> $GITHUB_STEP_SUMMARY
          echo "- **Dockerfile:** ${{ needs.detect-changes.outputs.dockerfile == 'true' && '✅ Changed' || '⏭️ Unchanged' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Scripts:** ${{ needs.detect-changes.outputs.scripts == 'true' && '✅ Changed' || '⏭️ Unchanged' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **UI:** ${{ needs.detect-changes.outputs.ui == 'true' && '✅ Changed' || '⏭️ Unchanged' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Config:** ${{ needs.detect-changes.outputs.config == 'true' && '✅ Changed' || '⏭️ Unchanged' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published Images" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  skip-build:
    needs: detect-changes
    if: needs.detect-changes.outputs.should_build == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Skip notification
        run: |
          echo "## ⏭️ Build Skipped" >> $GITHUB_STEP_SUMMARY
          echo "No relevant files changed. Image not rebuilt." >> $GITHUB_STEP_SUMMARY